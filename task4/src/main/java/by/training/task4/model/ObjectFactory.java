//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.06.17 at 07:30:56 PM MSK 
//


package by.training.task4.model;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the org.example.by.training.task4.model.banks package.
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _DepositForJuridicalPerson_QNAME = new QName("http://www.example.org/Banks", "depositForJuridicalPerson");
    private final static QName _DepositForNaturalPerson_QNAME = new QName("http://www.example.org/Banks", "depositForNaturalPerson");
    private final static QName _Deposit_QNAME = new QName("http://www.example.org/Banks", "deposit");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: org.example.by.training.task4.model.banks
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Banks }
     * 
     */
    public Banks createBanks() {
        return new Banks();
    }

    /**
     * Create an instance of {@link Deposit }
     * 
     */
    public Deposit createDeposit() {
        return new Deposit();
    }

    /**
     * Create an instance of {@link DepositForJuridicalPerson }
     * 
     */
    public DepositForJuridicalPerson createDepositForJuridicalPerson() {
        return new DepositForJuridicalPerson();
    }

    /**
     * Create an instance of {@link DepositForNaturalPerson }
     * 
     */
    public DepositForNaturalPerson createDepositForNaturalPerson() {
        return new DepositForNaturalPerson();
    }

    /**
     * Create an instance of {@link SNP }
     * 
     */
    public SNP createSNP() {
        return new SNP();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DepositForJuridicalPerson }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.example.org/Banks", name = "depositForJuridicalPerson", substitutionHeadNamespace = "http://www.example.org/Banks", substitutionHeadName = "deposit")
    public JAXBElement<DepositForJuridicalPerson> createDepositForJuridicalPerson(DepositForJuridicalPerson value) {
        return new JAXBElement<DepositForJuridicalPerson>(_DepositForJuridicalPerson_QNAME, DepositForJuridicalPerson.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DepositForNaturalPerson }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.example.org/Banks", name = "depositForNaturalPerson", substitutionHeadNamespace = "http://www.example.org/Banks", substitutionHeadName = "deposit")
    public JAXBElement<DepositForNaturalPerson> createDepositForNaturalPerson(DepositForNaturalPerson value) {
        return new JAXBElement<DepositForNaturalPerson>(_DepositForNaturalPerson_QNAME, DepositForNaturalPerson.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Deposit }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.example.org/Banks", name = "deposit")
    public JAXBElement<Deposit> createDeposit(Deposit value) {
        return new JAXBElement<Deposit>(_Deposit_QNAME, Deposit.class, null, value);
    }

}
